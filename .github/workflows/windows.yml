# Copyright (c)  2021  Fangjun Kuang (csukuangfj@gmail.com)

# See ../../LICENSE for clarification regarding multiple authors


name: build-windows

on:
  push:
    branches:
      - master
      - cpu2
  pull_request:
    branches:
      - master

env:
  BUILD_TYPE: Release

jobs:
  build-windows:
    # see https://github.com/actions/virtual-environments/blob/win19/20210525.0/images/win/Windows2019-Readme.md
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        torch: ["1.5.0", "1.5.1", "1.6.0", "1.7.0", "1.7.1", "1.8.0"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # see https://github.com/microsoft/setup-msbuild
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install PyTorch ${{ matrix.torch }}
        run: |
          pip3 install -qq torch==${{ matrix.torch }}+cpu -f https://download.pytorch.org/whl/torch_stable.html
          pip3 install -qq wheel twine

          python3 -m torch.utils.collect_env

      - name: Display CMake version
        run: |
          cmake --version
          cmake --help

      - name: Configure CMake
        shell: bash
        run: |
          mkdir build_release
          cd build_release
          cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DK2_WITH_CUDA=OFF ..
          ls -lh

      - name: Build k2
        run: |
          cd build_release
          cmake --build . --target _k2 --config Release

      - name: Display generated files
        shell: bash
        run: |
          cd build_release
          ls -lh bin/*/*
          ls -lh lib/*/*

      - name: Build wheel
        shell: bash
        run: |
          export K2_CMAKE_ARGS="-DK2_WITH_CUDA=OFF -DCMAKE_BUILD_TYPE=Release"
          python3 setup.py bdist_wheel
          ls -lh dist/

      - name: Upload Wheel
        uses: actions/upload-artifact@v2
        with:
          name: torch-${{ matrix.torch }}-python-${{ matrix.python-version }}-${{ matrix.os }}-cpu
          path: dist/*.whl

      - name: Run tests
        run: |
          cd build_release
          cmake --build . --target ALL_BUILD --config Release
          cmake --build . --target RUN_TESTS --config Release
