# Copyright (c)  2020  Fangjun Kuang (csukuangfj@gmail.com)

# See ../../LICENSE for clarification regarding multiple authors

# refer to https://github.com/actions/starter-workflows/pull/47/files

name: build_conda

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  BUILD_TYPE: Release

jobs:
  build_conda:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04]
        python-version: [3.6, 3.7, 3.8, 3.9]
        # from https://download.pytorch.org/whl/torch_stable.html
        # PyTorch 1.8.0 supports: cuda 10.1, 10.2 (default), 11.1
        # PyTorch 1.7.x supports: cuda 10.1, 10.2 (default), 11.0
        # PyTorch 1.6.0 supports: cuda 10.1, 10.2 (default)
        # PyTorch 1.5.x supports: cuda 10.1, 10.2 (default)
        # Other PyTorch versions are not tested
        # cuda: ["10.1", "10.2", "11.0", "11.1"]
        #
        # conda-forge provides only CUDA 10.1 and 11.0
        # See https://anaconda.org/conda-forge/cudatoolkit-dev/labels
        cuda: ["10.1", "11.0"]
        torch: ["1.5.0", "1.5.1", "1.6.0", "1.7.0", "1.7.1", "1.8.0"]
        exclude:
          - cuda: "11.0" # exclude 11.0 for [1.5.0, 1.5.1, 1.6.0, 1.8.0]
            torch: "1.5.0"
          - cuda: "11.0"
            torch: "1.5.1"
          - cuda: "11.0"
            torch: "1.6.0"
          - cuda: "11.0"
            torch: "1.8.0"
          - python-version: 3.9 # exclude Python 3.9 for [1.5.0, 1.5.1, 1.6.0, 1.7.0]
            torch: "1.5.0"
          - python-version: 3.9
            torch: "1.5.1"
          - python-version: 3.9
            torch: "1.6.0"
          - python-version: 3.9
            torch: "1.7.0"
          - cuda: "11.0" # exclude CUDA 11.0 for python [3.6, 3.7] because conda-forge does not support them
            python-version: 3.7
          - cuda: "11.0"
            python-version: 3.6
    steps:
      # refer to https://github.com/actions/checkout
      - uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          activate-environment: k2

      - name: Install Dependencies CUDA ${{ matrix.cuda }} PyTorch ${{ matrix.torch }}
        shell: bash -l {0}
        run: |
          conda install -y anaconda
          conda install -y conda-build
          conda install -y -c conda-forge cudatoolkit-dev=${{ matrix.cuda }}
          conda install -y -c nvidia cudatoolkit=${{ matrix.cuda }} cudnn=8.0.4
          conda install -y -c pytorch pytorch=${{ matrix.torch }} cudatoolkit=${{ matrix.cuda }}

      - name: Display conda info
        shell: bash -l {0}
        run: |
          which conda
          which anaconda
          conda env list
          conda info

      - name: Display NVCC version
        shell: bash -l {0}
        run: |
          which nvcc
          nvcc --version

      - name: Display PyTorch version
        shell: bash -l {0}
        run: |
          python3 -c "import torch; print(torch.__file__)"
          python3 -m torch.utils.collect_env

      - name: Build k2
        shell: bash -l {0}
        env:
          K2_CUDA_VERSION_STR: ${{ matrix.cuda }}
          K2_PYTHON_VERSION: ${{ matrix.python-version}}
          K2_TORCH_VERSION: ${{ matrix.torch }}
          K2_CONDA_TOKEN: ${{ secrets.K2_CONDA_TOKEN}}
        run: |
          ./scripts/build_conda.sh
